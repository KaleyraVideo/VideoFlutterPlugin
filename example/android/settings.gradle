// Copyright Â© 2018-2023 Kaleyra S.p.a. All Rights Reserved.
// See LICENSE for licensing information

pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.1.1" apply false
    id "org.jetbrains.kotlin.android" version "1.9.0" apply false
    id "com.google.gms.google-services" version "4.4.2" apply false
}

dependencyResolutionManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.bandyer.com/releases' }
    }

    def catalogVersion = "2024.11.01"

    versionCatalogs {
        create("kaleyraCatalog") {
            from("com.kaleyra:kaleyra-libs-version-catalog:$catalogVersion")
        }
        create("catalog") {
            from("com.kaleyra:video-sdk-version-catalog:$catalogVersion")
        }

        create("sampleAppCatalog") {
            from("com.kaleyra:video-app-version-catalog:$catalogVersion")
        }
    }
}

include ':app'

def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
def properties = new Properties()

assert localPropertiesFile.exists()
localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }

def flutterSdkPath = properties.getProperty("flutter.sdk")
assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
